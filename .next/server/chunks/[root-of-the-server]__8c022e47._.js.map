{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromarques/Dev/cursor/cursive/src/app/api/files/%5B...path%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nconst WORKSPACE_DIR = path.join(process.cwd(), 'workspace');\n\n// PUT - Save/update file content\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: Promise<{ path: string[] }> }\n) {\n  const resolvedParams = await params;\n  try {\n    const filePath = resolvedParams.path.join('/');\n    const fullPath = path.join(WORKSPACE_DIR, filePath);\n    \n    // Security check\n    if (!fullPath.startsWith(WORKSPACE_DIR)) {\n      return NextResponse.json({ error: 'Invalid path' }, { status: 400 });\n    }\n    \n    const { content } = await request.json();\n    \n    // Ensure parent directory exists\n    await fs.mkdir(path.dirname(fullPath), { recursive: true });\n    await fs.writeFile(fullPath, content, 'utf-8');\n    \n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error saving file:', error);\n    return NextResponse.json({ error: 'Failed to save file' }, { status: 500 });\n  }\n}\n\n// DELETE - Delete file or directory\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: Promise<{ path: string[] }> }\n) {\n  const resolvedParams = await params;\n  try {\n    const filePath = resolvedParams.path.join('/');\n    const fullPath = path.join(WORKSPACE_DIR, filePath);\n    \n    // Security check\n    if (!fullPath.startsWith(WORKSPACE_DIR)) {\n      return NextResponse.json({ error: 'Invalid path' }, { status: 400 });\n    }\n    \n    const stats = await fs.stat(fullPath);\n    \n    if (stats.isDirectory()) {\n      await fs.rmdir(fullPath, { recursive: true });\n    } else {\n      await fs.unlink(fullPath);\n    }\n    \n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error deleting file:', error);\n    return NextResponse.json({ error: 'Failed to delete file' }, { status: 500 });\n  }\n}\n\n// GET - Get specific file content\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ path: string[] }> }\n) {\n  const resolvedParams = await params;\n  try {\n    const filePath = resolvedParams.path.join('/');\n    const fullPath = path.join(WORKSPACE_DIR, filePath);\n    \n    // Security check\n    if (!fullPath.startsWith(WORKSPACE_DIR)) {\n      return NextResponse.json({ error: 'Invalid path' }, { status: 400 });\n    }\n    \n    const content = await fs.readFile(fullPath, 'utf-8');\n    const relativePath = path.relative(WORKSPACE_DIR, fullPath);\n    \n    return NextResponse.json({\n      name: path.basename(fullPath),\n      path: relativePath,\n      content,\n    });\n  } catch (error) {\n    console.error('Error reading file:', error);\n    return NextResponse.json({ error: 'Failed to read file' }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,gBAAgB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAGxC,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA2C;IAEnD,MAAM,iBAAiB,MAAM;IAC7B,IAAI;QACF,MAAM,WAAW,eAAe,IAAI,CAAC,IAAI,CAAC;QAC1C,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,eAAe;QAE1C,iBAAiB;QACjB,IAAI,CAAC,SAAS,UAAU,CAAC,gBAAgB;YACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEtC,iCAAiC;QACjC,MAAM,qHAAA,CAAA,UAAE,CAAC,KAAK,CAAC,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,WAAW;YAAE,WAAW;QAAK;QACzD,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,UAAU,SAAS;QAEtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACF;AAGO,eAAe,OACpB,OAAoB,EACpB,EAAE,MAAM,EAA2C;IAEnD,MAAM,iBAAiB,MAAM;IAC7B,IAAI;QACF,MAAM,WAAW,eAAe,IAAI,CAAC,IAAI,CAAC;QAC1C,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,eAAe;QAE1C,iBAAiB;QACjB,IAAI,CAAC,SAAS,UAAU,CAAC,gBAAgB;YACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,QAAQ,MAAM,qHAAA,CAAA,UAAE,CAAC,IAAI,CAAC;QAE5B,IAAI,MAAM,WAAW,IAAI;YACvB,MAAM,qHAAA,CAAA,UAAE,CAAC,KAAK,CAAC,UAAU;gBAAE,WAAW;YAAK;QAC7C,OAAO;YACL,MAAM,qHAAA,CAAA,UAAE,CAAC,MAAM,CAAC;QAClB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF;AAGO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA2C;IAEnD,MAAM,iBAAiB,MAAM;IAC7B,IAAI;QACF,MAAM,WAAW,eAAe,IAAI,CAAC,IAAI,CAAC;QAC1C,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,eAAe;QAE1C,iBAAiB;QACjB,IAAI,CAAC,SAAS,UAAU,CAAC,gBAAgB;YACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,UAAU,MAAM,qHAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,UAAU;QAC5C,MAAM,eAAe,iGAAA,CAAA,UAAI,CAAC,QAAQ,CAAC,eAAe;QAElD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,MAAM,iGAAA,CAAA,UAAI,CAAC,QAAQ,CAAC;YACpB,MAAM;YACN;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACF","debugId":null}}]
}