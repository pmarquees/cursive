{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromarques/Dev/cursor/cursive/src/lib/unifiedFileOps.ts"],"sourcesContent":["// Unified file operations - Client-side workspace mode management\n// This module handles client-side workspace mode without server dependencies\n\nexport interface FileOperationResult {\n  success: boolean;\n  error?: string;\n  fileName?: string;\n  content?: string;\n  files?: string[];\n  directories?: string[];\n  message?: string;\n  // For local operations, include instructions for client\n  localOperation?: boolean;\n  operation?: string;\n  data?: {\n    fileName?: string;\n    content?: string;\n    directory?: string;\n  };\n}\n\nlet currentWorkspaceMode: 'local' | 'remote' = 'remote';\n\nexport function setWorkspaceMode(mode: 'local' | 'remote') {\n  currentWorkspaceMode = mode;\n  console.log('Workspace mode set to:', mode);\n}\n\nexport function getWorkspaceMode(): 'local' | 'remote' {\n  return currentWorkspaceMode;\n}\n\n// These functions return instructions for local operations or make API calls for remote operations\nexport async function createFile(fileName: string, content: string): Promise<FileOperationResult> {\n  console.log('createFile called with mode:', currentWorkspaceMode, 'fileName:', fileName);\n  \n  if (currentWorkspaceMode === 'local') {\n    console.log('Returning local operation instructions for:', fileName);\n    // Return instructions for client-side execution\n    return {\n      success: true,\n      localOperation: true,\n      operation: 'create',\n      data: { fileName, content },\n      fileName,\n      content: content.slice(0, 200) + (content.length > 200 ? '...' : ''),\n      message: `File ${fileName} will be created in local workspace`\n    };\n  }\n  \n  console.log('Making API call for remote operation:', fileName);\n  // Make API call for remote operations\n  try {\n    const response = await fetch('/api/files', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: fileName,\n        type: 'file',\n        content,\n        path: ''\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to create file');\n    }\n\n    await response.json();\n    return {\n      success: true,\n      fileName,\n      content: content.slice(0, 200) + (content.length > 200 ? '...' : ''),\n      message: `Created file: ${fileName}`\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: `Failed to create file: ${error instanceof Error ? error.message : 'Unknown error'}`\n    };\n  }\n}\n\nexport async function updateFile(fileName: string, content: string): Promise<FileOperationResult> {\n  if (currentWorkspaceMode === 'local') {\n    return {\n      success: true,\n      localOperation: true,\n      operation: 'update',\n      data: { fileName, content },\n      fileName,\n      content: content.slice(0, 200) + (content.length > 200 ? '...' : ''),\n      message: `File ${fileName} will be updated in local workspace`\n    };\n  }\n\n  // Make API call for remote operations\n  try {\n    const response = await fetch(`/api/files/${fileName}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ content }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to update file');\n    }\n\n    return {\n      success: true,\n      fileName,\n      content: content.slice(0, 200) + (content.length > 200 ? '...' : ''),\n      message: `Updated file: ${fileName}`\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: `Failed to update file: ${error instanceof Error ? error.message : 'Unknown error'}`\n    };\n  }\n}\n\nexport async function readFile(fileName: string): Promise<FileOperationResult> {\n  if (currentWorkspaceMode === 'local') {\n    return {\n      success: true,\n      localOperation: true,\n      operation: 'read',\n      data: { fileName },\n      fileName,\n      content: '', // Will be filled by client\n      message: `File ${fileName} will be read from local workspace`\n    };\n  }\n\n  // Make API call for remote operations\n  try {\n    const response = await fetch(`/api/files/${fileName}`);\n    if (!response.ok) {\n      throw new Error('Failed to read file');\n    }\n\n    const result = await response.json();\n    return {\n      success: true,\n      fileName,\n      content: result.content,\n      message: `Read file: ${fileName}`\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: `Failed to read file: ${error instanceof Error ? error.message : 'Unknown error'}`\n    };\n  }\n}\n\nexport async function listFiles(directory: string = ''): Promise<FileOperationResult> {\n  if (currentWorkspaceMode === 'local') {\n    return {\n      success: true,\n      localOperation: true,\n      operation: 'list',\n      data: { directory },\n      files: [], // Will be filled by client\n      directories: [], // Will be filled by client\n      message: `Files will be listed from local workspace directory: ${directory || 'root'}`\n    };\n  }\n\n  // Make API call for remote operations\n  try {\n    const response = await fetch(`/api/files?path=${encodeURIComponent(directory)}`);\n    if (!response.ok) {\n      throw new Error('Failed to list files');\n    }\n\n    interface FileItem {\n      name: string;\n      type: 'file' | 'directory';\n      path: string;\n      content?: string;\n    }\n    \n    interface ApiResponse {\n      files: FileItem[];\n    }\n    \n    const result = await response.json() as ApiResponse;\n    const files = result.files\n      .filter((item) => item.type === 'file')\n      .map((item) => item.name);\n      \n    const directories = result.files\n      .filter((item) => item.type === 'directory')\n      .map((item) => item.name);\n\n    return {\n      success: true,\n      files,\n      directories,\n      message: `Listed ${files.length} files and ${directories.length} directories`\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: `Failed to list files: ${error instanceof Error ? error.message : 'Unknown error'}`\n    };\n  }\n}\n\nexport async function deleteFile(fileName: string): Promise<FileOperationResult> {\n  if (currentWorkspaceMode === 'local') {\n    return {\n      success: true,\n      localOperation: true,\n      operation: 'delete',\n      data: { fileName },\n      fileName,\n      message: `File ${fileName} will be deleted from local workspace`\n    };\n  }\n\n  // Make API call for remote operations\n  try {\n    const response = await fetch(`/api/files/${fileName}`, {\n      method: 'DELETE',\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to delete file');\n    }\n\n    return {\n      success: true,\n      fileName,\n      message: `Deleted file: ${fileName}`\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: `Failed to delete file: ${error instanceof Error ? error.message : 'Unknown error'}`\n    };\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromarques/Dev/cursor/cursive/src/lib/aiTools.ts"],"sourcesContent":["// AI Tools for file operations that the AI can call automatically\n\nimport { tool } from 'ai';\nimport { z } from 'zod';\nimport { \n  setWorkspaceMode as setUnifiedWorkspaceMode,\n  createFile as unifiedCreateFile,\n  updateFile as unifiedUpdateFile,\n  readFile as unifiedReadFile,\n  listFiles as unifiedListFiles,\n  deleteFile as unifiedDeleteFile\n} from './unifiedFileOps';\n\n// Export workspace mode setter for chat API\nexport function setWorkspaceMode(mode: 'local' | 'remote') {\n  setUnifiedWorkspaceMode(mode);\n}\n\nexport const aiTools = {\n  // Tool for creating new files\n  createFile: tool({\n    description: 'Create a new file with specified content',\n    parameters: z.object({\n      fileName: z.string().describe('Name of the file to create (e.g., \"index.html\", \"script.js\")'),\n      content: z.string().describe('Content to write to the file'),\n      reason: z.string().describe('Brief explanation of why this file is being created'),\n    }),\n    execute: async ({ fileName, content, reason }) => {\n      try {\n        const result = await unifiedCreateFile(fileName, content);\n        \n        if (result.success) {\n          return {\n            success: true,\n            fileName,\n            message: `Created file: ${fileName}. ${reason}`,\n            content: result.content,\n            localOperation: result.localOperation,\n            operation: result.operation,\n            data: result.data\n          };\n        } else {\n          return {\n            success: false,\n            error: result.error || 'Failed to create file'\n          };\n        }\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to create file: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n\n  // Tool for updating existing files\n  updateFile: tool({\n    description: 'Update an existing file with new content',\n    parameters: z.object({\n      fileName: z.string().describe('Name of the file to update'),\n      content: z.string().describe('New content for the file'),\n      reason: z.string().describe('Brief explanation of what changes were made'),\n    }),\n    execute: async ({ fileName, content, reason }) => {\n      try {\n        const result = await unifiedUpdateFile(fileName, content);\n        \n        if (result.success) {\n          return {\n            success: true,\n            fileName,\n            message: `Updated file: ${fileName}. ${reason}`,\n            content: result.content,\n            localOperation: result.localOperation,\n            operation: result.operation,\n            data: result.data\n          };\n        } else {\n          return {\n            success: false,\n            error: result.error || 'Failed to update file'\n          };\n        }\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to update file: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n\n  // Tool for reading file contents\n  readFile: tool({\n    description: 'Read the contents of a file',\n    parameters: z.object({\n      fileName: z.string().describe('Name of the file to read'),\n    }),\n    execute: async ({ fileName }) => {\n      try {\n        const result = await unifiedReadFile(fileName);\n        \n        if (result.success) {\n          return {\n            success: true,\n            fileName,\n            content: result.content,\n            message: `Read file: ${fileName}`,\n            localOperation: result.localOperation,\n            operation: result.operation,\n            data: result.data\n          };\n        } else {\n          return {\n            success: false,\n            error: result.error || 'Failed to read file'\n          };\n        }\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to read file: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n\n  // Tool for listing files in the workspace\n  listFiles: tool({\n    description: 'List all files in the workspace directory',\n    parameters: z.object({\n      directory: z.string().optional().describe('Subdirectory to list (optional, defaults to root)'),\n    }),\n    execute: async ({ directory = '' }) => {\n      try {\n        const result = await unifiedListFiles(directory);\n        \n        if (result.success) {\n          return {\n            success: true,\n            files: result.files,\n            directories: result.directories,\n            message: `Listed ${result.files?.length || 0} files and ${result.directories?.length || 0} directories`,\n            localOperation: result.localOperation,\n            operation: result.operation,\n            data: result.data\n          };\n        } else {\n          return {\n            success: false,\n            error: result.error || 'Failed to list files'\n          };\n        }\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to list files: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n\n  // Tool for deleting files\n  deleteFile: tool({\n    description: 'Delete a file from the workspace',\n    parameters: z.object({\n      fileName: z.string().describe('Name of the file to delete'),\n      reason: z.string().describe('Brief explanation of why this file is being deleted'),\n    }),\n    execute: async ({ fileName, reason }) => {\n      try {\n        const result = await unifiedDeleteFile(fileName);\n        \n        if (result.success) {\n          return {\n            success: true,\n            fileName,\n            message: `Deleted file: ${fileName}. ${reason}`,\n            localOperation: result.localOperation,\n            operation: result.operation,\n            data: result.data\n          };\n        } else {\n          return {\n            success: false,\n            error: result.error || 'Failed to delete file'\n          };\n        }\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to delete file: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromarques/Dev/cursor/cursive/src/app/api/chat/route.ts"],"sourcesContent":["import { openai } from '@ai-sdk/openai';\nimport { anthropic } from '@ai-sdk/anthropic';\nimport { streamText } from 'ai';\nimport { NextRequest } from 'next/server';\nimport { aiTools, setWorkspaceMode } from '@/lib/aiTools';\n\n// Configure AI providers\nconst providers = {\n  openai: {\n    'gpt-4o': openai('gpt-4o'),\n    'gpt-4o-mini': openai('gpt-4o-mini'),\n    'gpt-4-turbo': openai('gpt-4-turbo'),\n  },\n  anthropic: {\n    'claude-3-5-sonnet-20241022': anthropic('claude-3-5-sonnet-20241022'),\n    'claude-3-5-haiku-20241022': anthropic('claude-3-5-haiku-20241022'),\n    'claude-3-opus-20240229': anthropic('claude-3-opus-20240229'),\n  },\n};\n\nexport async function POST(req: NextRequest) {\n  try {\n    console.log('Chat API called');\n    \n    // Check environment variables\n    const openaiKey = process.env.OPENAI_API_KEY;\n    const anthropicKey = process.env.ANTHROPIC_API_KEY;\n    \n    console.log('Environment check:', {\n      hasOpenAI: !!openaiKey,\n      hasAnthropic: !!anthropicKey\n    });\n\n    const { messages, model, provider, fileContext } = await req.json();\n    \n    console.log('Request data:', { model, provider, messageCount: messages.length });\n\n    // Check workspace mode from headers and configure AI tools\n    const workspaceModeHeader = req.headers.get('x-workspace-mode');\n    const workspaceMode = workspaceModeHeader === 'local' ? 'local' : 'remote';\n    setWorkspaceMode(workspaceMode);\n    \n    console.log('Chat API - Workspace mode header:', workspaceModeHeader);\n    console.log('Chat API - Setting workspace mode to:', workspaceMode);\n\n    // Get the AI model\n    const providerModels = providers[provider as keyof typeof providers];\n    const aiModel = providerModels?.[model as keyof typeof providerModels];\n    if (!aiModel) {\n      console.error('Invalid model or provider:', { model, provider });\n      return new Response('Invalid model or provider', { status: 400 });\n    }\n    \n    // Check if we have the required API key for the provider\n    if (provider === 'openai' && !openaiKey) {\n      console.error('Missing OpenAI API key');\n      return new Response('OpenAI API key is required but not configured', { status: 400 });\n    }\n    \n    if (provider === 'anthropic' && !anthropicKey) {\n      console.error('Missing Anthropic API key');\n      return new Response('Anthropic API key is required but not configured', { status: 400 });\n    }\n\n    // Build system message with file context\n    let systemMessage = `You are an AI coding assistant that can directly edit files in the user's workspace. \n\nWhen the user asks you to:\n- Create files: Use the createFile tool\n- Edit/modify files: Use the updateFile tool \n- Read files: Use the readFile tool\n- List files: Use the listFiles tool\n- Delete files: Use the deleteFile tool\n\nAlways explain what you're doing and why. When editing files, make sure to preserve important parts unless specifically asked to replace everything.\n\nAvailable tools:\n- createFile: Create new files with content\n- updateFile: Modify existing files\n- readFile: Read file contents\n- listFiles: See what files exist\n- deleteFile: Remove files\n\nYou can perform multiple file operations in sequence to complete complex tasks.`;\n    \n    if (fileContext && fileContext.length > 0) {\n      systemMessage += '\\n\\nFile context:';\n      fileContext.forEach((file: { name: string; content: string }) => {\n        systemMessage += `\\n\\n--- ${file.name} ---\\n${file.content}`;\n      });\n    }\n\n    // Prepare messages with system context\n    const allMessages = [\n      { role: 'system', content: systemMessage },\n      ...messages,\n    ];\n\n    const result = await streamText({\n      model: aiModel,\n      messages: allMessages,\n      tools: aiTools,\n      temperature: 0.7,\n      maxTokens: 4000,\n    });\n\n    console.log('Streaming response...');\n    return result.toDataStreamResponse();\n  } catch (error) {\n    console.error('Chat API error:', error);\n    console.error('Error details:', {\n      message: error instanceof Error ? error.message : 'Unknown error',\n      stack: error instanceof Error ? error.stack : undefined\n    });\n    return new Response(`Internal server error: ${error instanceof Error ? error.message : 'Unknown error'}`, { status: 500 });\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}