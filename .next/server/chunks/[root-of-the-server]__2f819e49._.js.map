{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromarques/Dev/cursor/cursive/src/lib/aiTools.ts"],"sourcesContent":["// AI Tools for file operations that the AI can call automatically\n\nimport { tool } from 'ai';\nimport { z } from 'zod';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nconst WORKSPACE_DIR = path.join(process.cwd(), 'workspace');\n\n// Server-side workspace mode management\nlet currentWorkspaceMode: 'local' | 'remote' = 'remote';\n\nexport function setWorkspaceMode(mode: 'local' | 'remote') {\n  currentWorkspaceMode = mode;\n  console.log('AI Tools: Setting workspace mode to:', mode);\n}\n\n// Security check for file paths\nfunction isValidPath(filePath: string): boolean {\n  const fullPath = path.join(WORKSPACE_DIR, filePath);\n  return fullPath.startsWith(WORKSPACE_DIR) && !filePath.includes('..');\n}\n\n// Ensure workspace directory exists\nasync function ensureWorkspaceDir() {\n  try {\n    await fs.access(WORKSPACE_DIR);\n  } catch {\n    await fs.mkdir(WORKSPACE_DIR, { recursive: true });\n  }\n}\n\nexport const aiTools = {\n  // Tool for creating new files\n  createFile: tool({\n    description: 'Create a new file with specified content',\n    parameters: z.object({\n      fileName: z.string().describe('Name of the file to create (e.g., \"index.html\", \"script.js\")'),\n      content: z.string().describe('Content to write to the file'),\n      reason: z.string().describe('Brief explanation of why this file is being created'),\n    }),\n    execute: async ({ fileName, content, reason }) => {\n      try {\n        console.log('AI Tools createFile: mode =', currentWorkspaceMode, 'fileName =', fileName);\n        \n        if (currentWorkspaceMode === 'local') {\n          // Return instructions for client-side execution\n          console.log('Returning local operation instructions for:', fileName);\n          return {\n            success: true,\n            localOperation: true,\n            operation: 'create',\n            data: { fileName, content },\n            fileName,\n            content: content.slice(0, 200) + (content.length > 200 ? '...' : ''),\n            message: `Created file: ${fileName}. ${reason}`\n          };\n        }\n        \n        // Handle remote (server-side) operation directly\n        console.log('Performing remote file operation for:', fileName);\n        await ensureWorkspaceDir();\n        \n        if (!isValidPath(fileName)) {\n          return { success: false, error: 'Invalid file path' };\n        }\n\n        const fullPath = path.join(WORKSPACE_DIR, fileName);\n        await fs.mkdir(path.dirname(fullPath), { recursive: true });\n        await fs.writeFile(fullPath, content, 'utf-8');\n\n        return {\n          success: true,\n          fileName,\n          content: content.slice(0, 200) + (content.length > 200 ? '...' : ''),\n          message: `Created file: ${fileName}. ${reason}`\n        };\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to create file: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n\n  // Tool for updating existing files\n  updateFile: tool({\n    description: 'Update an existing file with new content',\n    parameters: z.object({\n      fileName: z.string().describe('Name of the file to update'),\n      content: z.string().describe('New content for the file'),\n      reason: z.string().describe('Brief explanation of what changes were made'),\n    }),\n    execute: async ({ fileName, content, reason }) => {\n      try {\n        console.log('AI Tools updateFile: mode =', currentWorkspaceMode, 'fileName =', fileName);\n        \n        if (currentWorkspaceMode === 'local') {\n          return {\n            success: true,\n            localOperation: true,\n            operation: 'update',\n            data: { fileName, content },\n            fileName,\n            content: content.slice(0, 200) + (content.length > 200 ? '...' : ''),\n            message: `Updated file: ${fileName}. ${reason}`\n          };\n        }\n        \n        await ensureWorkspaceDir();\n        if (!isValidPath(fileName)) {\n          return { success: false, error: 'Invalid file path' };\n        }\n\n        const fullPath = path.join(WORKSPACE_DIR, fileName);\n        try {\n          await fs.access(fullPath);\n        } catch {\n          return { success: false, error: 'File does not exist' };\n        }\n        await fs.writeFile(fullPath, content, 'utf-8');\n\n        return {\n          success: true,\n          fileName,\n          content: content.slice(0, 200) + (content.length > 200 ? '...' : ''),\n          message: `Updated file: ${fileName}. ${reason}`\n        };\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to update file: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n\n  // Tool for reading file contents\n  readFile: tool({\n    description: 'Read the contents of a file',\n    parameters: z.object({\n      fileName: z.string().describe('Name of the file to read'),\n    }),\n    execute: async ({ fileName }) => {\n      try {\n        console.log('AI Tools readFile: mode =', currentWorkspaceMode, 'fileName =', fileName);\n        \n        if (currentWorkspaceMode === 'local') {\n          return {\n            success: true,\n            localOperation: true,\n            operation: 'read',\n            data: { fileName },\n            fileName,\n            content: '',\n            message: `Read file: ${fileName}`\n          };\n        }\n        \n        await ensureWorkspaceDir();\n        if (!isValidPath(fileName)) {\n          return { success: false, error: 'Invalid file path' };\n        }\n\n        const fullPath = path.join(WORKSPACE_DIR, fileName);\n        const content = await fs.readFile(fullPath, 'utf-8');\n\n        return {\n          success: true,\n          fileName,\n          content,\n          message: `Read file: ${fileName}`\n        };\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to read file: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n\n  // Tool for listing files in the workspace\n  listFiles: tool({\n    description: 'List all files in the workspace directory',\n    parameters: z.object({\n      directory: z.string().optional().describe('Subdirectory to list (optional, defaults to root)'),\n    }),\n    execute: async ({ directory = '' }) => {\n      try {\n        console.log('AI Tools listFiles: mode =', currentWorkspaceMode, 'directory =', directory);\n        \n        if (currentWorkspaceMode === 'local') {\n          return {\n            success: true,\n            localOperation: true,\n            operation: 'list',\n            data: { directory },\n            files: [],\n            directories: [],\n            message: `Listed files from local workspace`\n          };\n        }\n        \n        await ensureWorkspaceDir();\n        if (!isValidPath(directory)) {\n          return { success: false, error: 'Invalid directory path' };\n        }\n\n        const fullPath = path.join(WORKSPACE_DIR, directory);\n        const items = await fs.readdir(fullPath, { withFileTypes: true });\n\n        const files = items\n          .filter(item => item.isFile())\n          .map(item => item.name);\n          \n        const directories = items\n          .filter(item => item.isDirectory())\n          .map(item => item.name);\n\n        return {\n          success: true,\n          files,\n          directories,\n          message: `Listed ${files.length} files and ${directories.length} directories`\n        };\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to list files: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n\n  // Tool for deleting files\n  deleteFile: tool({\n    description: 'Delete a file from the workspace',\n    parameters: z.object({\n      fileName: z.string().describe('Name of the file to delete'),\n      reason: z.string().describe('Brief explanation of why this file is being deleted'),\n    }),\n    execute: async ({ fileName, reason }) => {\n      try {\n        console.log('AI Tools deleteFile: mode =', currentWorkspaceMode, 'fileName =', fileName);\n        \n        if (currentWorkspaceMode === 'local') {\n          return {\n            success: true,\n            localOperation: true,\n            operation: 'delete',\n            data: { fileName },\n            fileName,\n            message: `Deleted file: ${fileName}. ${reason}`\n          };\n        }\n        \n        await ensureWorkspaceDir();\n        if (!isValidPath(fileName)) {\n          return { success: false, error: 'Invalid file path' };\n        }\n\n        const fullPath = path.join(WORKSPACE_DIR, fileName);\n        await fs.unlink(fullPath);\n\n        return {\n          success: true,\n          fileName,\n          message: `Deleted file: ${fileName}. ${reason}`\n        };\n      } catch (error) {\n        return { \n          success: false, \n          error: `Failed to delete file: ${error instanceof Error ? error.message : 'Unknown error'}` \n        };\n      }\n    },\n  }),\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromarques/Dev/cursor/cursive/src/app/api/chat/route.ts"],"sourcesContent":["import { openai } from '@ai-sdk/openai';\nimport { anthropic } from '@ai-sdk/anthropic';\nimport { streamText } from 'ai';\nimport { NextRequest } from 'next/server';\nimport { aiTools, setWorkspaceMode } from '@/lib/aiTools';\n\n// Configure AI providers\nconst providers = {\n  openai: {\n    'gpt-4o': openai('gpt-4o'),\n    'gpt-4o-mini': openai('gpt-4o-mini'),\n    'gpt-4-turbo': openai('gpt-4-turbo'),\n  },\n  anthropic: {\n    'claude-3-5-sonnet-20241022': anthropic('claude-3-5-sonnet-20241022'),\n    'claude-3-5-haiku-20241022': anthropic('claude-3-5-haiku-20241022'),\n    'claude-3-opus-20240229': anthropic('claude-3-opus-20240229'),\n  },\n};\n\nexport async function POST(req: NextRequest) {\n  try {\n    console.log('Chat API called');\n    \n    // Check environment variables\n    const openaiKey = process.env.OPENAI_API_KEY;\n    const anthropicKey = process.env.ANTHROPIC_API_KEY;\n    \n    console.log('Environment check:', {\n      hasOpenAI: !!openaiKey,\n      hasAnthropic: !!anthropicKey\n    });\n\n    const { messages, model, provider, fileContext } = await req.json();\n    \n    console.log('Request data:', { model, provider, messageCount: messages.length });\n\n    // Check workspace mode from headers and configure AI tools\n    const workspaceModeHeader = req.headers.get('x-workspace-mode');\n    const workspaceMode = workspaceModeHeader === 'local' ? 'local' : 'remote';\n    setWorkspaceMode(workspaceMode);\n    \n    console.log('Chat API - Workspace mode header:', workspaceModeHeader);\n    console.log('Chat API - Setting workspace mode to:', workspaceMode);\n\n    // Get the AI model\n    const providerModels = providers[provider as keyof typeof providers];\n    const aiModel = providerModels?.[model as keyof typeof providerModels];\n    if (!aiModel) {\n      console.error('Invalid model or provider:', { model, provider });\n      return new Response('Invalid model or provider', { status: 400 });\n    }\n    \n    // Check if we have the required API key for the provider\n    if (provider === 'openai' && !openaiKey) {\n      console.error('Missing OpenAI API key');\n      return new Response('OpenAI API key is required but not configured', { status: 400 });\n    }\n    \n    if (provider === 'anthropic' && !anthropicKey) {\n      console.error('Missing Anthropic API key');\n      return new Response('Anthropic API key is required but not configured', { status: 400 });\n    }\n\n    // Build system message with file context\n    let systemMessage = `You are an AI coding assistant that can directly edit files in the user's workspace. \n\nWhen the user asks you to:\n- Create files: Use the createFile tool\n- Edit/modify files: Use the updateFile tool \n- Read files: Use the readFile tool\n- List files: Use the listFiles tool\n- Delete files: Use the deleteFile tool\n\nAlways explain what you're doing and why. When editing files, make sure to preserve important parts unless specifically asked to replace everything.\n\nAvailable tools:\n- createFile: Create new files with content\n- updateFile: Modify existing files\n- readFile: Read file contents\n- listFiles: See what files exist\n- deleteFile: Remove files\n\nYou can perform multiple file operations in sequence to complete complex tasks.`;\n    \n    if (fileContext && fileContext.length > 0) {\n      systemMessage += '\\n\\nFile context:';\n      fileContext.forEach((file: { name: string; content: string }) => {\n        systemMessage += `\\n\\n--- ${file.name} ---\\n${file.content}`;\n      });\n    }\n\n    // Prepare messages with system context\n    const allMessages = [\n      { role: 'system', content: systemMessage },\n      ...messages,\n    ];\n\n    const result = await streamText({\n      model: aiModel,\n      messages: allMessages,\n      tools: aiTools,\n      temperature: 0.7,\n      maxTokens: 4000,\n    });\n\n    console.log('Streaming response...');\n    return result.toDataStreamResponse();\n  } catch (error) {\n    console.error('Chat API error:', error);\n    console.error('Error details:', {\n      message: error instanceof Error ? error.message : 'Unknown error',\n      stack: error instanceof Error ? error.stack : undefined\n    });\n    return new Response(`Internal server error: ${error instanceof Error ? error.message : 'Unknown error'}`, { status: 500 });\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}